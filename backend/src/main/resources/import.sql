CREATE TABLE IF NOT EXISTS audit_logs (
                                        log_id INT PRIMARY KEY
                                          GENERATED BY DEFAULT AS IDENTITY,
                                        event_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                        event_details CLOB
);

CREATE TABLE IF NOT EXISTS courts (
                                    court_number INT PRIMARY KEY,
                                    is_available BOOLEAN DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS criteria_filters (
                                              criteria_id INT NOT NULL,
                                              filter_value VARCHAR(255),
                                              filter_key VARCHAR(255) NOT NULL,
                                              PRIMARY KEY (criteria_id, filter_key)
);

CREATE TABLE IF NOT EXISTS report_criteria (
                                             criteria_id INT PRIMARY KEY
                                               GENERATED BY DEFAULT AS IDENTITY,
                                             start_date DATE,
                                             end_date DATE
);

ALTER TABLE criteria_filters
  ADD CONSTRAINT FK_criteria_filters FOREIGN KEY (criteria_id)
    REFERENCES report_criteria(criteria_id);

CREATE TABLE IF NOT EXISTS events (
                                    event_id INT PRIMARY KEY
                                      GENERATED BY DEFAULT AS IDENTITY,
                                    title VARCHAR(255) NOT NULL,
                                    description CLOB,
                                    event_date DATE NOT NULL,
                                    event_time TIME NOT NULL,
                                    location VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS users (
                                   user_id INT PRIMARY KEY
                                     GENERATED BY DEFAULT AS IDENTITY,
                                   username VARCHAR(50) NOT NULL UNIQUE,
                                   password_hash VARCHAR(255) NOT NULL,
                                   email VARCHAR(100) NOT NULL UNIQUE,
                                   role VARCHAR(20) NOT NULL,
                                   status VARCHAR(20) DEFAULT 'Active' NOT NULL,
                                   phone_number VARCHAR(12),
                                   full_name VARCHAR(50) UNIQUE,
                                   address VARCHAR(255),
                                   billing_plan VARCHAR(20)
);

CREATE TABLE IF NOT EXISTS member_profiles (
                                             profile_id INT PRIMARY KEY
                                               GENERATED BY DEFAULT AS IDENTITY,
                                             address VARCHAR(255),
                                             guest_passes_remaining INT DEFAULT 5,    -- default allowance
                                             phone_number VARCHAR(255),
                                             user_id INT NOT NULL UNIQUE,
                                             CONSTRAINT FK_member_user FOREIGN KEY (user_id)
                                               REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS billing_transactions (
                                                  billing_id INT PRIMARY KEY
                                                    GENERATED BY DEFAULT AS IDENTITY,
                                                  amount DECIMAL(10, 2) NOT NULL,
                                                  billing_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
                                                  description VARCHAR(255),
                                                  fee_type VARCHAR(50) NOT NULL,
                                                  user_id INT NOT NULL,
                                                  CONSTRAINT FK_billing_user FOREIGN KEY (user_id)
                                                    REFERENCES users(user_id)
);

CREATE TABLE IF NOT EXISTS court_reservations (
                                                reservation_id INT PRIMARY KEY
                                                  GENERATED BY DEFAULT AS IDENTITY,
                                                reservation_date DATE NOT NULL,
                                                start_time TIME NOT NULL,
                                                end_time TIME NOT NULL,
                                                user_id INT NOT NULL,
                                                court_number INT NOT NULL,
                                                CONSTRAINT FK_reservation_court FOREIGN KEY (court_number)
                                                  REFERENCES courts(court_number),
                                                CONSTRAINT FK_reservation_user FOREIGN KEY (user_id)
                                                  REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS transactions (
                                          transaction_id INT PRIMARY KEY
                                            GENERATED BY DEFAULT AS IDENTITY,
                                          user_id INT NOT NULL,
                                          amount DECIMAL(10,2) NOT NULL,
                                          transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
                                          transaction_type VARCHAR(50) NOT NULL,
                                          status VARCHAR(20) NOT NULL,
                                          description VARCHAR(255),
                                          CONSTRAINT FK_transaction_user FOREIGN KEY (user_id)
                                            REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS payment_disputes (
                                              dispute_id INT PRIMARY KEY
                                                GENERATED BY DEFAULT AS IDENTITY,
                                              reason VARCHAR(255),
                                              status VARCHAR(255) NOT NULL,
                                              transaction_id INT NOT NULL,
                                              CONSTRAINT FK_dispute_transaction FOREIGN KEY (transaction_id)
                                                REFERENCES transactions(transaction_id)
);

CREATE TABLE IF NOT EXISTS guest_passes (
                                          guest_pass_id INT PRIMARY KEY
                                            GENERATED BY DEFAULT AS IDENTITY,
                                          user_id INT NOT NULL,
                                          price DECIMAL(10,2) NOT NULL,
                                          purchase_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
                                          expiration_date TIMESTAMP NOT NULL,
                                          used BOOLEAN NOT NULL,
                                          CONSTRAINT FK_guest_pass_user FOREIGN KEY (user_id)
                                            REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS financial_reports (
                                               report_id INT PRIMARY KEY
                                                 GENERATED BY DEFAULT AS IDENTITY,
                                               generated_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                               report_data CLOB
);

CREATE TABLE IF NOT EXISTS reconciliations (
                                             reconciliation_id INT PRIMARY KEY
                                               GENERATED BY DEFAULT AS IDENTITY
);

CREATE TABLE IF NOT EXISTS reconciliation_discrepancies (
                                                          reconciliation_id INT NOT NULL,
                                                          discrepancy VARCHAR(255),
                                                          CONSTRAINT FK_recon_discrepancies FOREIGN KEY (reconciliation_id)
                                                            REFERENCES reconciliations(reconciliation_id)
);

-- ─────────────────────────────────────────────────────────────
-- NEW: USERS CAN SIGN UP FOR EVENTS
-- ─────────────────────────────────────────────────────────────

CREATE TABLE IF NOT EXISTS event_registrations (
                                                 registration_id INT PRIMARY KEY
                                                   GENERATED BY DEFAULT AS IDENTITY,
                                                 event_id         INT NOT NULL,
                                                 user_id          INT NOT NULL,
                                                 registered_on    TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
                                                 CONSTRAINT FK_reg_event FOREIGN KEY (event_id)
                                                   REFERENCES events(event_id),
                                                 CONSTRAINT FK_reg_user  FOREIGN KEY (user_id)
                                                   REFERENCES users(user_id)
);


CREATE VIEW IF NOT EXISTS guest_passes_monthly_summary AS
SELECT
  u.user_id,
  COALESCE(COUNT(gp.guest_pass_id), 0)                       AS purchased_this_month,
  5 - COALESCE(COUNT(gp.guest_pass_id), 0)                   AS remaining_this_month
FROM users u
       LEFT JOIN guest_passes gp
                 ON gp.user_id = u.user_id
                   AND MONTH(gp.purchase_date) = MONTH(CURRENT_DATE())
                   AND YEAR (gp.purchase_date) = YEAR (CURRENT_DATE())
GROUP BY u.user_id;
